apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: weather-app
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: weather-app
        track: stable
      annotations:
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"dedicated", "value":"search"}]'
        scheduler.alpha.kubernetes.io/affinity: >
          {
            "nodeAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": {
                "nodeSelectorTerms": [
                  {
                    "matchExpressions": [
                      {
                        "key": "localch/nodetype",
                        "operator": "In",
                        "values": ["search"]
                      }
                    ]
                  }
                ]
              }
            }
          }
    spec:
      containers:
      - name: weather-app
        image: registry.env.intra.local.ch/alex/k8s-demo:0.1.0-SNAPSHOT
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config-volume
          readOnly: true
          mountPath: /opt/
        - name: shared-state
          mountPath: /state
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
      - name: sleepy
        image: registry.env.intra.local.ch/alex/k8-demo-sleepy:0.1
        volumeMounts:
        - name: shared-state
          mountPath: /state
        readinessProbe:
          exec:
            command:
              - grep
              - "OK"
              - /state/state.run
          initialDelaySeconds: 15
          timeoutSeconds: 1
      imagePullSecrets:
      - name: demo-key
      volumes:
      - name: config-volume
        secret:
          secretName: weather-config-prod
      - name: shared-state
        emptyDir: {}
